syntax = "proto3";

package runtiva.connections.v1;

import "google/protobuf/empty.proto";

import "connections/updates_inputs.proto";
import "updates/updates_stream.proto";

// Service reponsible for pushing all real-time chat-related updates to the client
service ConnectionsService {
    // `Connect` is called when the user opens the app and is ready to receive updates
    // This is a server-side stream RPC, meaning that the server will keep the connection open
    // and send updates to the client as they happen
    rpc UpdatesConnect(ConnectRequest) returns (stream runtiva.updates.v1.UpdatesStream) {}

    // `RegisterOnPeerList` is called when the user opens the chat screen containing the 
    // list of their peers (e.g. chats, chatgroups)
    rpc RegisterOnPeerList(ConnectRequest) returns (google.protobuf.Empty) {}

    // `UnregisterFromPeerList` is called when the user opens the chat screen containing the 
    // list of their peers (e.g. chats, chatgroups)
    rpc UnregisterFromPeerList(ConnectRequest) returns (google.protobuf.Empty) {}

    // `ActiveOnPeer` is called when the user opens a specific chat screen (e.g. chat, chatgroup, topic, channel) 
    rpc RegisterOnPeer(ConnectPeerRequest) returns (google.protobuf.Empty) {}

    // `LeavePeer` is called when the user leaves a specific chat screen (e.g. chat, chatgroup, topic, channel)
    rpc UnregisterFromPeer(ConnectPeerRequest) returns (google.protobuf.Empty) {}

}

