syntax = "proto3";

package chat;
import "channel/channel_shared.proto";

// Inputs are the request messages/objects that the client sends to the server as part of the service call requests.
// Request Message for `Channel_Create` RPC.
message ChannelCreateRequest {
    string unique_id = 1; // Nanoid
    string title = 2;
    string about = 3;
    ChannelType channel_type = 4;
    int32 ttl_period = 9;
}

// Request Message for `Channel_EditAdmin` RPC.
message ChannelEditAdminRequest {
    int64 channel_id = 1;
    int64 user_id = 2;
    bool is_admin = 3;
    ChannelAdminRights admin_rights = 4;
}

// Request Message for `Channel_EditOwner` RPC. 
message ChannelEditOwnerRequest {
    int64 channel_id = 1;
    int64 user_id = 2;
    string needs_2fa_reconfirmation_TBD = 3;
}

// Request Message for `Channel_EditParticipant` RPC. 
message ChannelEditParticipantRequest {
    int64 channel_id = 1;
    int64 user_id = 2;
    ChannelParticipantRights participant_rights = 3;
}

// Request Message for `Channel_EditPhoto` RPC. 
message ChannelEditPhotoRequest {
    int64 channel_id = 1;
    oneof photo {
        int64 photo64 = 2;
        string input_file_TBD = 3;
    }
}

// Request Message for `Channel_EditTitle` RPC. 
message ChannelEditTitleRequest {
    int64 channel_id = 1;
    string title = 2;
}

// Request Message for `Channel_EditAbout` RPC. 
message ChannelEditAboutRequest {
    int64 channel_id = 1;
    string about = 2;
} 

// Request Message for `Channel_Delete` RPC. 
message ChannelDeleteRequest {
    int64 channel_id = 1;
}

// Request Message for `Channel_Disable` RPC. 
message ChannelDisableRequest {
    int64 channel_id = 1;
    bool disable = 2;
}

// ***************** Settings Methods ***************** //
// Request Message for `Channel_EnablePrehistory` RPC.
message ChannelEnablePrehistoryRequest {
    int64 channel_id = 1;
    bool enabled = 2;
}

// Request Message for `Channel_ShowSignatures` RPC.
message ChannelShowSignaturesRequest {
    int64 channel_id = 1;
    bool enabled = 2;
}

// Request Message for `Channel_SetJoinToSend` RPC.
message ChannelSetJoinToSendRequest {
    int64 channel_id = 1;
    bool enabled = 2;
}

// Request Message for `Channel_JoinApprovalRequired` RPC.
message ChannelSetJoinApprovalRequiredRequest {
    int64 channel_id = 1;
    bool enabled = 2;
}

// ****************** Joining/Leaving Methods ****************** //
// Request Message for `Channel_Join` RPC.
message ChannelJoinRequest {
    int64 channel_id = 1;
}

// Response Message for `Channel_Join` RPC.
message ChannelJoinResponse {
    JoinResponse join_status = 1; 
}

// Request Message for `Channel_Leave` RPC.
message ChannelLeaveRequest {
    int64 channel_id = 1;
}

// Request Message for `Channel_ActionJoinRequest` RPC.
message ChannelActionJoinRequestRequest {
    int64 channel_id = 1;
    repeated int64 user_id = 2;
    bool approve = 3;
}

// // Request Message for `Channel_ExportInvite` RPC.
// message ChannelExportInviteRequest {
//     int64 channel_id = 1;
// }